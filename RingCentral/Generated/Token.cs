
using System.Threading.Tasks;
namespace RingCentral
{
    public partial class Token : Model
    {
        internal Token(Model parent) : base(parent, null) { }
        protected override string PathSegment
        {
            get
            {
                return "token";
            }
        }
        public Task<PostResponse> Post(object requestBody)
        {
            return RC.Post<PostResponse>(Endpoint(false), requestBody, null);
        }
        public Task<PostResponse> Post(PostRequest requestBody)
        {
            return Post(requestBody as object);
        }
        public partial class PostRequest
        {
            // Must hold password value for Resource Owner Credentials flow. If client application is not authorized by the specified grant_type, response does not contain refresh_token and refresh_token_ttl attributes
            public string grant_type { get; set; }
            // Optional. Access token lifetime in seconds; the possible values are from 600 sec (10 min) to 3600 sec (1 hour). The default value is 3600 sec. If the value specified exceeds the default one, the default value is set. If the value specified is less than 600 seconds, the minimum value (600 sec) is set
            public long? access_token_ttl { get; set; }
            // Optional. Refresh token lifetime in seconds. The default value depends on the client application, but as usual it equals to 7 days. If the value specified exceeds the default one, the default value is applied. If client specifies refresh_token_ttl<=0, refresh token is not returned even if the corresponding grant type is supported
            public long? refresh_token_ttl { get; set; }
            // Phone number linked to account or extension in account in E.164 format with or without leading "+" sign
            public string username { get; set; }
            // Optional. Extension short number. If company number is specified as a username, and extension is not specified, the server will attempt to authenticate client as main company administrator
            public string extension { get; set; }
            // User's password
            public string password { get; set; }
            // Optional. List of API permissions to be used with access token (see Application Permissions). Can be omitted when requesting all permissions defined during the application registration phase
            public string scope { get; set; }
            // Optional. Unique identifier of a client application. You can pass it in request according to pattern [a-zA-Z0-9_\-]{1,64}. Otherwise it is auto-generated by server. The value will be returned in response in both cases
            public string endpoint_id { get; set; }
        }
        public partial class PostResponse
        {
            // Access token to pass to subsequent API requests
            public string access_token { get; set; }
            // Issued access token TTL (time to live), in seconds
            public long? expires_in { get; set; }
            // Refresh token to get a new access token, when the issued one expires
            public string refresh_token { get; set; }
            // Issued refresh token TTL (time to live), in seconds
            public long? refresh_token_expires_in { get; set; }
            // List of permissions allowed with this access token, white-space separated
            public string scope { get; set; }
            // Type of token. Use this parameter in Authorization header of requests
            public string token_type { get; set; }
            // Extension identifier
            public string owner_id { get; set; }
            // Unique identifier of a client application passed by the client, or auto-generated by server if not specified in request
            public string endpoint_id { get; set; }
        }
    }
}
